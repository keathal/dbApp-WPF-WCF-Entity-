//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityDB.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Book_my", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Book_my : EntityDB.ServiceReference1.T_Book {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableButtonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float isAdminField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableButton {
            get {
                return this.enableButtonField;
            }
            set {
                if ((this.enableButtonField.Equals(value) != true)) {
                    this.enableButtonField = value;
                    this.RaisePropertyChanged("enableButton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                if ((this.isAdminField.Equals(value) != true)) {
                    this.isAdminField = value;
                    this.RaisePropertyChanged("isAdmin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Book", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EntityDB.ServiceReference1.T_Book_my))]
    public partial class T_Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_bookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_genreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Author T_AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Genre T_GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Journal[] T_JournalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_name {
            get {
                return this.Book_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_nameField, value) != true)) {
                    this.Book_nameField = value;
                    this.RaisePropertyChanged("Book_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_author {
            get {
                return this.ID_authorField;
            }
            set {
                if ((this.ID_authorField.Equals(value) != true)) {
                    this.ID_authorField = value;
                    this.RaisePropertyChanged("ID_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_book {
            get {
                return this.ID_bookField;
            }
            set {
                if ((this.ID_bookField.Equals(value) != true)) {
                    this.ID_bookField = value;
                    this.RaisePropertyChanged("ID_book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_genre {
            get {
                return this.ID_genreField;
            }
            set {
                if ((this.ID_genreField.Equals(value) != true)) {
                    this.ID_genreField = value;
                    this.RaisePropertyChanged("ID_genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_user {
            get {
                return this.ID_userField;
            }
            set {
                if ((this.ID_userField.Equals(value) != true)) {
                    this.ID_userField = value;
                    this.RaisePropertyChanged("ID_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Author T_Author {
            get {
                return this.T_AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.T_AuthorField, value) != true)) {
                    this.T_AuthorField = value;
                    this.RaisePropertyChanged("T_Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Genre T_Genre {
            get {
                return this.T_GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.T_GenreField, value) != true)) {
                    this.T_GenreField = value;
                    this.RaisePropertyChanged("T_Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Journal[] T_Journal {
            get {
                return this.T_JournalField;
            }
            set {
                if ((object.ReferenceEquals(this.T_JournalField, value) != true)) {
                    this.T_JournalField = value;
                    this.RaisePropertyChanged("T_Journal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Author", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string A_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string A_surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Book[] T_BookField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string A_name {
            get {
                return this.A_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.A_nameField, value) != true)) {
                    this.A_nameField = value;
                    this.RaisePropertyChanged("A_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string A_surname {
            get {
                return this.A_surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.A_surnameField, value) != true)) {
                    this.A_surnameField = value;
                    this.RaisePropertyChanged("A_surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_author {
            get {
                return this.ID_authorField;
            }
            set {
                if ((this.ID_authorField.Equals(value) != true)) {
                    this.ID_authorField = value;
                    this.RaisePropertyChanged("ID_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Book[] T_Book {
            get {
                return this.T_BookField;
            }
            set {
                if ((object.ReferenceEquals(this.T_BookField, value) != true)) {
                    this.T_BookField = value;
                    this.RaisePropertyChanged("T_Book");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Genre", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Genre_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_genreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Book[] T_BookField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre_name {
            get {
                return this.Genre_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Genre_nameField, value) != true)) {
                    this.Genre_nameField = value;
                    this.RaisePropertyChanged("Genre_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_genre {
            get {
                return this.ID_genreField;
            }
            set {
                if ((this.ID_genreField.Equals(value) != true)) {
                    this.ID_genreField = value;
                    this.RaisePropertyChanged("ID_genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Book[] T_Book {
            get {
                return this.T_BookField;
            }
            set {
                if ((object.ReferenceEquals(this.T_BookField, value) != true)) {
                    this.T_BookField = value;
                    this.RaisePropertyChanged("T_Book");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Journal", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Journal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_issueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_bookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_journalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_readerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Book T_BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Reader T_ReaderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_issue {
            get {
                return this.Date_issueField;
            }
            set {
                if ((this.Date_issueField.Equals(value) != true)) {
                    this.Date_issueField = value;
                    this.RaisePropertyChanged("Date_issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_book {
            get {
                return this.ID_bookField;
            }
            set {
                if ((this.ID_bookField.Equals(value) != true)) {
                    this.ID_bookField = value;
                    this.RaisePropertyChanged("ID_book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_journal {
            get {
                return this.ID_journalField;
            }
            set {
                if ((this.ID_journalField.Equals(value) != true)) {
                    this.ID_journalField = value;
                    this.RaisePropertyChanged("ID_journal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_reader {
            get {
                return this.ID_readerField;
            }
            set {
                if ((this.ID_readerField.Equals(value) != true)) {
                    this.ID_readerField = value;
                    this.RaisePropertyChanged("ID_reader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Book T_Book {
            get {
                return this.T_BookField;
            }
            set {
                if ((object.ReferenceEquals(this.T_BookField, value) != true)) {
                    this.T_BookField = value;
                    this.RaisePropertyChanged("T_Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Reader T_Reader {
            get {
                return this.T_ReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.T_ReaderField, value) != true)) {
                    this.T_ReaderField = value;
                    this.RaisePropertyChanged("T_Reader");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Reader", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Reader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_readerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Reg_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EntityDB.ServiceReference1.T_Journal[] T_JournalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_reader {
            get {
                return this.ID_readerField;
            }
            set {
                if ((this.ID_readerField.Equals(value) != true)) {
                    this.ID_readerField = value;
                    this.RaisePropertyChanged("ID_reader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_name {
            get {
                return this.R_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.R_nameField, value) != true)) {
                    this.R_nameField = value;
                    this.RaisePropertyChanged("R_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_surname {
            get {
                return this.R_surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.R_surnameField, value) != true)) {
                    this.R_surnameField = value;
                    this.RaisePropertyChanged("R_surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Reg_date {
            get {
                return this.Reg_dateField;
            }
            set {
                if ((this.Reg_dateField.Equals(value) != true)) {
                    this.Reg_dateField = value;
                    this.RaisePropertyChanged("Reg_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityDB.ServiceReference1.T_Journal[] T_Journal {
            get {
                return this.T_JournalField;
            }
            set {
                if ((object.ReferenceEquals(this.T_JournalField, value) != true)) {
                    this.T_JournalField = value;
                    this.RaisePropertyChanged("T_Journal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Report", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_readerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_surnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Books {
            get {
                return this.BooksField;
            }
            set {
                if ((this.BooksField.Equals(value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_reader {
            get {
                return this.ID_readerField;
            }
            set {
                if ((this.ID_readerField.Equals(value) != true)) {
                    this.ID_readerField = value;
                    this.RaisePropertyChanged("ID_reader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_name {
            get {
                return this.R_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.R_nameField, value) != true)) {
                    this.R_nameField = value;
                    this.RaisePropertyChanged("R_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_surname {
            get {
                return this.R_surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.R_surnameField, value) != true)) {
                    this.R_surnameField = value;
                    this.RaisePropertyChanged("R_surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/resetBooks", ReplyAction="http://tempuri.org/IService1/resetBooksResponse")]
        EntityDB.ServiceReference1.T_Book_my[] resetBooks(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/resetBooks", ReplyAction="http://tempuri.org/IService1/resetBooksResponse")]
        System.IAsyncResult BeginresetBooks(int id, System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Book_my[] EndresetBooks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllBook", ReplyAction="http://tempuri.org/IService1/selectAllBookResponse")]
        EntityDB.ServiceReference1.T_Book_my[] selectAllBook(int user_id, int author_id, int genre_id, string book_name, System.Nullable<bool> isAvailable, bool allAvailable);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/selectAllBook", ReplyAction="http://tempuri.org/IService1/selectAllBookResponse")]
        System.IAsyncResult BeginselectAllBook(int user_id, int author_id, int genre_id, string book_name, System.Nullable<bool> isAvailable, bool allAvailable, System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Book_my[] EndselectAllBook(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllGenre", ReplyAction="http://tempuri.org/IService1/selectAllGenreResponse")]
        EntityDB.ServiceReference1.T_Genre[] selectAllGenre();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/selectAllGenre", ReplyAction="http://tempuri.org/IService1/selectAllGenreResponse")]
        System.IAsyncResult BeginselectAllGenre(System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Genre[] EndselectAllGenre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllAuthor", ReplyAction="http://tempuri.org/IService1/selectAllAuthorResponse")]
        EntityDB.ServiceReference1.T_Author[] selectAllAuthor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/selectAllAuthor", ReplyAction="http://tempuri.org/IService1/selectAllAuthorResponse")]
        System.IAsyncResult BeginselectAllAuthor(System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Author[] EndselectAllAuthor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllReader", ReplyAction="http://tempuri.org/IService1/selectAllReaderResponse")]
        EntityDB.ServiceReference1.T_Reader[] selectAllReader();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/selectAllReader", ReplyAction="http://tempuri.org/IService1/selectAllReaderResponse")]
        System.IAsyncResult BeginselectAllReader(System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Reader[] EndselectAllReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllJournal", ReplyAction="http://tempuri.org/IService1/selectAllJournalResponse")]
        EntityDB.ServiceReference1.T_Journal[] selectAllJournal();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/selectAllJournal", ReplyAction="http://tempuri.org/IService1/selectAllJournalResponse")]
        System.IAsyncResult BeginselectAllJournal(System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Journal[] EndselectAllJournal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editBook", ReplyAction="http://tempuri.org/IService1/editBookResponse")]
        void editBook(int id, int author, int genre, string book_name, bool available);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editBook", ReplyAction="http://tempuri.org/IService1/editBookResponse")]
        System.IAsyncResult BegineditBook(int id, int author, int genre, string book_name, bool available, System.AsyncCallback callback, object asyncState);
        
        void EndeditBook(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editGenre", ReplyAction="http://tempuri.org/IService1/editGenreResponse")]
        void editGenre(int id, string genre_name, string color);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editGenre", ReplyAction="http://tempuri.org/IService1/editGenreResponse")]
        System.IAsyncResult BegineditGenre(int id, string genre_name, string color, System.AsyncCallback callback, object asyncState);
        
        void EndeditGenre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editAuthor", ReplyAction="http://tempuri.org/IService1/editAuthorResponse")]
        void editAuthor(int id, string name, string sname);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editAuthor", ReplyAction="http://tempuri.org/IService1/editAuthorResponse")]
        System.IAsyncResult BegineditAuthor(int id, string name, string sname, System.AsyncCallback callback, object asyncState);
        
        void EndeditAuthor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editReader", ReplyAction="http://tempuri.org/IService1/editReaderResponse")]
        void editReader(int id, string name, string sname);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editReader", ReplyAction="http://tempuri.org/IService1/editReaderResponse")]
        System.IAsyncResult BegineditReader(int id, string name, string sname, System.AsyncCallback callback, object asyncState);
        
        void EndeditReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editJournal", ReplyAction="http://tempuri.org/IService1/editJournalResponse")]
        void editJournal(int id, int id_book, int id_reader);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editJournal", ReplyAction="http://tempuri.org/IService1/editJournalResponse")]
        System.IAsyncResult BegineditJournal(int id, int id_book, int id_reader, System.AsyncCallback callback, object asyncState);
        
        void EndeditJournal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteBook", ReplyAction="http://tempuri.org/IService1/deleteBookResponse")]
        void deleteBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/deleteBook", ReplyAction="http://tempuri.org/IService1/deleteBookResponse")]
        System.IAsyncResult BegindeleteBook(int id, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteBook(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteGenre", ReplyAction="http://tempuri.org/IService1/deleteGenreResponse")]
        void deleteGenre(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/deleteGenre", ReplyAction="http://tempuri.org/IService1/deleteGenreResponse")]
        System.IAsyncResult BegindeleteGenre(int id, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteGenre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteAuthor", ReplyAction="http://tempuri.org/IService1/deleteAuthorResponse")]
        void deleteAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/deleteAuthor", ReplyAction="http://tempuri.org/IService1/deleteAuthorResponse")]
        System.IAsyncResult BegindeleteAuthor(int id, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteAuthor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteReader", ReplyAction="http://tempuri.org/IService1/deleteReaderResponse")]
        void deleteReader(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/deleteReader", ReplyAction="http://tempuri.org/IService1/deleteReaderResponse")]
        System.IAsyncResult BegindeleteReader(int id, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteJournal", ReplyAction="http://tempuri.org/IService1/deleteJournalResponse")]
        void deleteJournal(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/deleteJournal", ReplyAction="http://tempuri.org/IService1/deleteJournalResponse")]
        System.IAsyncResult BegindeleteJournal(int id, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteJournal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBook", ReplyAction="http://tempuri.org/IService1/addBookResponse")]
        void addBook(int id_genre, int id_author, string book_name, bool available);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addBook", ReplyAction="http://tempuri.org/IService1/addBookResponse")]
        System.IAsyncResult BeginaddBook(int id_genre, int id_author, string book_name, bool available, System.AsyncCallback callback, object asyncState);
        
        void EndaddBook(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addGenre", ReplyAction="http://tempuri.org/IService1/addGenreResponse")]
        void addGenre(string genre_name, string color);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addGenre", ReplyAction="http://tempuri.org/IService1/addGenreResponse")]
        System.IAsyncResult BeginaddGenre(string genre_name, string color, System.AsyncCallback callback, object asyncState);
        
        void EndaddGenre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addReader", ReplyAction="http://tempuri.org/IService1/addReaderResponse")]
        void addReader(string name, string sname);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addReader", ReplyAction="http://tempuri.org/IService1/addReaderResponse")]
        System.IAsyncResult BeginaddReader(string name, string sname, System.AsyncCallback callback, object asyncState);
        
        void EndaddReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addAuthor", ReplyAction="http://tempuri.org/IService1/addAuthorResponse")]
        void addAuthor(string name, string sname);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addAuthor", ReplyAction="http://tempuri.org/IService1/addAuthorResponse")]
        System.IAsyncResult BeginaddAuthor(string name, string sname, System.AsyncCallback callback, object asyncState);
        
        void EndaddAuthor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addJournal", ReplyAction="http://tempuri.org/IService1/addJournalResponse")]
        void addJournal(int id_book, int id_reader);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addJournal", ReplyAction="http://tempuri.org/IService1/addJournalResponse")]
        System.IAsyncResult BeginaddJournal(int id_book, int id_reader, System.AsyncCallback callback, object asyncState);
        
        void EndaddJournal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchBook", ReplyAction="http://tempuri.org/IService1/searchBookResponse")]
        EntityDB.ServiceReference1.T_Book[] searchBook(string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/searchBook", ReplyAction="http://tempuri.org/IService1/searchBookResponse")]
        System.IAsyncResult BeginsearchBook(string name, System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Book[] EndsearchBook(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/writeError", ReplyAction="http://tempuri.org/IService1/writeErrorResponse")]
        void writeError(string error);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/writeError", ReplyAction="http://tempuri.org/IService1/writeErrorResponse")]
        System.IAsyncResult BeginwriteError(string error, System.AsyncCallback callback, object asyncState);
        
        void EndwriteError(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterGenre", ReplyAction="http://tempuri.org/IService1/filterGenreResponse")]
        EntityDB.ServiceReference1.T_Book[] filterGenre(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/filterGenre", ReplyAction="http://tempuri.org/IService1/filterGenreResponse")]
        System.IAsyncResult BeginfilterGenre(int id, System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Book[] EndfilterGenre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterAuthor", ReplyAction="http://tempuri.org/IService1/filterAuthorResponse")]
        EntityDB.ServiceReference1.T_Book[] filterAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/filterAuthor", ReplyAction="http://tempuri.org/IService1/filterAuthorResponse")]
        System.IAsyncResult BeginfilterAuthor(int id, System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Book[] EndfilterAuthor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterAvailable", ReplyAction="http://tempuri.org/IService1/filterAvailableResponse")]
        EntityDB.ServiceReference1.T_Book[] filterAvailable(bool available);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/filterAvailable", ReplyAction="http://tempuri.org/IService1/filterAvailableResponse")]
        System.IAsyncResult BeginfilterAvailable(bool available, System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Book[] EndfilterAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/saveUser", ReplyAction="http://tempuri.org/IService1/saveUserResponse")]
        int saveUser(string name, string surname, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/saveUser", ReplyAction="http://tempuri.org/IService1/saveUserResponse")]
        System.IAsyncResult BeginsaveUser(string name, string surname, string login, string password, System.AsyncCallback callback, object asyncState);
        
        int EndsaveUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logIn", ReplyAction="http://tempuri.org/IService1/logInResponse")]
        int logIn([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/logIn", ReplyAction="http://tempuri.org/IService1/logInResponse")]
        System.IAsyncResult BeginlogIn(string login, string password, System.AsyncCallback callback, object asyncState);
        
        int EndlogIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Connect", ReplyAction="http://tempuri.org/IService1/ConnectResponse")]
        int Connect(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Connect", ReplyAction="http://tempuri.org/IService1/ConnectResponse")]
        System.IAsyncResult BeginConnect(int id, System.AsyncCallback callback, object asyncState);
        
        int EndConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Disconnect", ReplyAction="http://tempuri.org/IService1/DisconnectResponse")]
        void Disconnect(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Disconnect", ReplyAction="http://tempuri.org/IService1/DisconnectResponse")]
        System.IAsyncResult BeginDisconnect(int id, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/sendMsg")]
        void sendMsg(string message, int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IService1/sendMsg")]
        System.IAsyncResult BeginsendMsg(string message, int id, System.AsyncCallback callback, object asyncState);
        
        void EndsendMsg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sendMessage", ReplyAction="http://tempuri.org/IService1/sendMessageResponse")]
        string sendMessage(string message, int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/sendMessage", ReplyAction="http://tempuri.org/IService1/sendMessageResponse")]
        System.IAsyncResult BeginsendMessage(string message, int id, System.AsyncCallback callback, object asyncState);
        
        string EndsendMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkForMessage", ReplyAction="http://tempuri.org/IService1/checkForMessageResponse")]
        string[] checkForMessage(int count, int current);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/checkForMessage", ReplyAction="http://tempuri.org/IService1/checkForMessageResponse")]
        System.IAsyncResult BegincheckForMessage(int count, int current, System.AsyncCallback callback, object asyncState);
        
        string[] EndcheckForMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/currentMsg", ReplyAction="http://tempuri.org/IService1/currentMsgResponse")]
        int currentMsg();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/currentMsg", ReplyAction="http://tempuri.org/IService1/currentMsgResponse")]
        System.IAsyncResult BegincurrentMsg(System.AsyncCallback callback, object asyncState);
        
        int EndcurrentMsg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectReport", ReplyAction="http://tempuri.org/IService1/selectReportResponse")]
        EntityDB.ServiceReference1.T_Report[] selectReport();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/selectReport", ReplyAction="http://tempuri.org/IService1/selectReportResponse")]
        System.IAsyncResult BeginselectReport(System.AsyncCallback callback, object asyncState);
        
        EntityDB.ServiceReference1.T_Report[] EndselectReport(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : EntityDB.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class resetBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public resetBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Book_my[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Book_my[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectAllBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectAllBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Book_my[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Book_my[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectAllGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectAllGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Genre[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Genre[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectAllAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectAllAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Author[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Author[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectAllReaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectAllReaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Reader[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Reader[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectAllJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectAllJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Journal[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Journal[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class searchBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public searchBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Book[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Book[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class filterGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public filterGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Book[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Book[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class filterAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public filterAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Book[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Book[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class filterAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public filterAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Book[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Book[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class saveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public saveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class logInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public logInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public sendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class checkForMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public checkForMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class currentMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public currentMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EntityDB.ServiceReference1.T_Report[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EntityDB.ServiceReference1.T_Report[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<EntityDB.ServiceReference1.IService1>, EntityDB.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginresetBooksDelegate;
        
        private EndOperationDelegate onEndresetBooksDelegate;
        
        private System.Threading.SendOrPostCallback onresetBooksCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectAllBookDelegate;
        
        private EndOperationDelegate onEndselectAllBookDelegate;
        
        private System.Threading.SendOrPostCallback onselectAllBookCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectAllGenreDelegate;
        
        private EndOperationDelegate onEndselectAllGenreDelegate;
        
        private System.Threading.SendOrPostCallback onselectAllGenreCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectAllAuthorDelegate;
        
        private EndOperationDelegate onEndselectAllAuthorDelegate;
        
        private System.Threading.SendOrPostCallback onselectAllAuthorCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectAllReaderDelegate;
        
        private EndOperationDelegate onEndselectAllReaderDelegate;
        
        private System.Threading.SendOrPostCallback onselectAllReaderCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectAllJournalDelegate;
        
        private EndOperationDelegate onEndselectAllJournalDelegate;
        
        private System.Threading.SendOrPostCallback onselectAllJournalCompletedDelegate;
        
        private BeginOperationDelegate onBegineditBookDelegate;
        
        private EndOperationDelegate onEndeditBookDelegate;
        
        private System.Threading.SendOrPostCallback oneditBookCompletedDelegate;
        
        private BeginOperationDelegate onBegineditGenreDelegate;
        
        private EndOperationDelegate onEndeditGenreDelegate;
        
        private System.Threading.SendOrPostCallback oneditGenreCompletedDelegate;
        
        private BeginOperationDelegate onBegineditAuthorDelegate;
        
        private EndOperationDelegate onEndeditAuthorDelegate;
        
        private System.Threading.SendOrPostCallback oneditAuthorCompletedDelegate;
        
        private BeginOperationDelegate onBegineditReaderDelegate;
        
        private EndOperationDelegate onEndeditReaderDelegate;
        
        private System.Threading.SendOrPostCallback oneditReaderCompletedDelegate;
        
        private BeginOperationDelegate onBegineditJournalDelegate;
        
        private EndOperationDelegate onEndeditJournalDelegate;
        
        private System.Threading.SendOrPostCallback oneditJournalCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteBookDelegate;
        
        private EndOperationDelegate onEnddeleteBookDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteBookCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteGenreDelegate;
        
        private EndOperationDelegate onEnddeleteGenreDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteGenreCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteAuthorDelegate;
        
        private EndOperationDelegate onEnddeleteAuthorDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteAuthorCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteReaderDelegate;
        
        private EndOperationDelegate onEnddeleteReaderDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteReaderCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteJournalDelegate;
        
        private EndOperationDelegate onEnddeleteJournalDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteJournalCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddBookDelegate;
        
        private EndOperationDelegate onEndaddBookDelegate;
        
        private System.Threading.SendOrPostCallback onaddBookCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddGenreDelegate;
        
        private EndOperationDelegate onEndaddGenreDelegate;
        
        private System.Threading.SendOrPostCallback onaddGenreCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddReaderDelegate;
        
        private EndOperationDelegate onEndaddReaderDelegate;
        
        private System.Threading.SendOrPostCallback onaddReaderCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddAuthorDelegate;
        
        private EndOperationDelegate onEndaddAuthorDelegate;
        
        private System.Threading.SendOrPostCallback onaddAuthorCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddJournalDelegate;
        
        private EndOperationDelegate onEndaddJournalDelegate;
        
        private System.Threading.SendOrPostCallback onaddJournalCompletedDelegate;
        
        private BeginOperationDelegate onBeginsearchBookDelegate;
        
        private EndOperationDelegate onEndsearchBookDelegate;
        
        private System.Threading.SendOrPostCallback onsearchBookCompletedDelegate;
        
        private BeginOperationDelegate onBeginwriteErrorDelegate;
        
        private EndOperationDelegate onEndwriteErrorDelegate;
        
        private System.Threading.SendOrPostCallback onwriteErrorCompletedDelegate;
        
        private BeginOperationDelegate onBeginfilterGenreDelegate;
        
        private EndOperationDelegate onEndfilterGenreDelegate;
        
        private System.Threading.SendOrPostCallback onfilterGenreCompletedDelegate;
        
        private BeginOperationDelegate onBeginfilterAuthorDelegate;
        
        private EndOperationDelegate onEndfilterAuthorDelegate;
        
        private System.Threading.SendOrPostCallback onfilterAuthorCompletedDelegate;
        
        private BeginOperationDelegate onBeginfilterAvailableDelegate;
        
        private EndOperationDelegate onEndfilterAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onfilterAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginsaveUserDelegate;
        
        private EndOperationDelegate onEndsaveUserDelegate;
        
        private System.Threading.SendOrPostCallback onsaveUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginlogInDelegate;
        
        private EndOperationDelegate onEndlogInDelegate;
        
        private System.Threading.SendOrPostCallback onlogInCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectDelegate;
        
        private EndOperationDelegate onEndConnectDelegate;
        
        private System.Threading.SendOrPostCallback onConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendMsgDelegate;
        
        private EndOperationDelegate onEndsendMsgDelegate;
        
        private System.Threading.SendOrPostCallback onsendMsgCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendMessageDelegate;
        
        private EndOperationDelegate onEndsendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onsendMessageCompletedDelegate;
        
        private BeginOperationDelegate onBegincheckForMessageDelegate;
        
        private EndOperationDelegate onEndcheckForMessageDelegate;
        
        private System.Threading.SendOrPostCallback oncheckForMessageCompletedDelegate;
        
        private BeginOperationDelegate onBegincurrentMsgDelegate;
        
        private EndOperationDelegate onEndcurrentMsgDelegate;
        
        private System.Threading.SendOrPostCallback oncurrentMsgCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectReportDelegate;
        
        private EndOperationDelegate onEndselectReportDelegate;
        
        private System.Threading.SendOrPostCallback onselectReportCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<resetBooksCompletedEventArgs> resetBooksCompleted;
        
        public event System.EventHandler<selectAllBookCompletedEventArgs> selectAllBookCompleted;
        
        public event System.EventHandler<selectAllGenreCompletedEventArgs> selectAllGenreCompleted;
        
        public event System.EventHandler<selectAllAuthorCompletedEventArgs> selectAllAuthorCompleted;
        
        public event System.EventHandler<selectAllReaderCompletedEventArgs> selectAllReaderCompleted;
        
        public event System.EventHandler<selectAllJournalCompletedEventArgs> selectAllJournalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> editBookCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> editGenreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> editAuthorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> editReaderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> editJournalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteBookCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteGenreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteAuthorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteReaderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteJournalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addBookCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addGenreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addReaderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addAuthorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addJournalCompleted;
        
        public event System.EventHandler<searchBookCompletedEventArgs> searchBookCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> writeErrorCompleted;
        
        public event System.EventHandler<filterGenreCompletedEventArgs> filterGenreCompleted;
        
        public event System.EventHandler<filterAuthorCompletedEventArgs> filterAuthorCompleted;
        
        public event System.EventHandler<filterAvailableCompletedEventArgs> filterAvailableCompleted;
        
        public event System.EventHandler<saveUserCompletedEventArgs> saveUserCompleted;
        
        public event System.EventHandler<logInCompletedEventArgs> logInCompleted;
        
        public event System.EventHandler<ConnectCompletedEventArgs> ConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> sendMsgCompleted;
        
        public event System.EventHandler<sendMessageCompletedEventArgs> sendMessageCompleted;
        
        public event System.EventHandler<checkForMessageCompletedEventArgs> checkForMessageCompleted;
        
        public event System.EventHandler<currentMsgCompletedEventArgs> currentMsgCompleted;
        
        public event System.EventHandler<selectReportCompletedEventArgs> selectReportCompleted;
        
        public EntityDB.ServiceReference1.T_Book_my[] resetBooks(int id) {
            return base.Channel.resetBooks(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginresetBooks(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginresetBooks(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Book_my[] EndresetBooks(System.IAsyncResult result) {
            return base.Channel.EndresetBooks(result);
        }
        
        private System.IAsyncResult OnBeginresetBooks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginresetBooks(id, callback, asyncState);
        }
        
        private object[] OnEndresetBooks(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Book_my[] retVal = this.EndresetBooks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnresetBooksCompleted(object state) {
            if ((this.resetBooksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.resetBooksCompleted(this, new resetBooksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void resetBooksAsync(int id) {
            this.resetBooksAsync(id, null);
        }
        
        public void resetBooksAsync(int id, object userState) {
            if ((this.onBeginresetBooksDelegate == null)) {
                this.onBeginresetBooksDelegate = new BeginOperationDelegate(this.OnBeginresetBooks);
            }
            if ((this.onEndresetBooksDelegate == null)) {
                this.onEndresetBooksDelegate = new EndOperationDelegate(this.OnEndresetBooks);
            }
            if ((this.onresetBooksCompletedDelegate == null)) {
                this.onresetBooksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnresetBooksCompleted);
            }
            base.InvokeAsync(this.onBeginresetBooksDelegate, new object[] {
                        id}, this.onEndresetBooksDelegate, this.onresetBooksCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Book_my[] selectAllBook(int user_id, int author_id, int genre_id, string book_name, System.Nullable<bool> isAvailable, bool allAvailable) {
            return base.Channel.selectAllBook(user_id, author_id, genre_id, book_name, isAvailable, allAvailable);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginselectAllBook(int user_id, int author_id, int genre_id, string book_name, System.Nullable<bool> isAvailable, bool allAvailable, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginselectAllBook(user_id, author_id, genre_id, book_name, isAvailable, allAvailable, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Book_my[] EndselectAllBook(System.IAsyncResult result) {
            return base.Channel.EndselectAllBook(result);
        }
        
        private System.IAsyncResult OnBeginselectAllBook(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int user_id = ((int)(inValues[0]));
            int author_id = ((int)(inValues[1]));
            int genre_id = ((int)(inValues[2]));
            string book_name = ((string)(inValues[3]));
            System.Nullable<bool> isAvailable = ((System.Nullable<bool>)(inValues[4]));
            bool allAvailable = ((bool)(inValues[5]));
            return this.BeginselectAllBook(user_id, author_id, genre_id, book_name, isAvailable, allAvailable, callback, asyncState);
        }
        
        private object[] OnEndselectAllBook(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Book_my[] retVal = this.EndselectAllBook(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectAllBookCompleted(object state) {
            if ((this.selectAllBookCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectAllBookCompleted(this, new selectAllBookCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectAllBookAsync(int user_id, int author_id, int genre_id, string book_name, System.Nullable<bool> isAvailable, bool allAvailable) {
            this.selectAllBookAsync(user_id, author_id, genre_id, book_name, isAvailable, allAvailable, null);
        }
        
        public void selectAllBookAsync(int user_id, int author_id, int genre_id, string book_name, System.Nullable<bool> isAvailable, bool allAvailable, object userState) {
            if ((this.onBeginselectAllBookDelegate == null)) {
                this.onBeginselectAllBookDelegate = new BeginOperationDelegate(this.OnBeginselectAllBook);
            }
            if ((this.onEndselectAllBookDelegate == null)) {
                this.onEndselectAllBookDelegate = new EndOperationDelegate(this.OnEndselectAllBook);
            }
            if ((this.onselectAllBookCompletedDelegate == null)) {
                this.onselectAllBookCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectAllBookCompleted);
            }
            base.InvokeAsync(this.onBeginselectAllBookDelegate, new object[] {
                        user_id,
                        author_id,
                        genre_id,
                        book_name,
                        isAvailable,
                        allAvailable}, this.onEndselectAllBookDelegate, this.onselectAllBookCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Genre[] selectAllGenre() {
            return base.Channel.selectAllGenre();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginselectAllGenre(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginselectAllGenre(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Genre[] EndselectAllGenre(System.IAsyncResult result) {
            return base.Channel.EndselectAllGenre(result);
        }
        
        private System.IAsyncResult OnBeginselectAllGenre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginselectAllGenre(callback, asyncState);
        }
        
        private object[] OnEndselectAllGenre(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Genre[] retVal = this.EndselectAllGenre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectAllGenreCompleted(object state) {
            if ((this.selectAllGenreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectAllGenreCompleted(this, new selectAllGenreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectAllGenreAsync() {
            this.selectAllGenreAsync(null);
        }
        
        public void selectAllGenreAsync(object userState) {
            if ((this.onBeginselectAllGenreDelegate == null)) {
                this.onBeginselectAllGenreDelegate = new BeginOperationDelegate(this.OnBeginselectAllGenre);
            }
            if ((this.onEndselectAllGenreDelegate == null)) {
                this.onEndselectAllGenreDelegate = new EndOperationDelegate(this.OnEndselectAllGenre);
            }
            if ((this.onselectAllGenreCompletedDelegate == null)) {
                this.onselectAllGenreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectAllGenreCompleted);
            }
            base.InvokeAsync(this.onBeginselectAllGenreDelegate, null, this.onEndselectAllGenreDelegate, this.onselectAllGenreCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Author[] selectAllAuthor() {
            return base.Channel.selectAllAuthor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginselectAllAuthor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginselectAllAuthor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Author[] EndselectAllAuthor(System.IAsyncResult result) {
            return base.Channel.EndselectAllAuthor(result);
        }
        
        private System.IAsyncResult OnBeginselectAllAuthor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginselectAllAuthor(callback, asyncState);
        }
        
        private object[] OnEndselectAllAuthor(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Author[] retVal = this.EndselectAllAuthor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectAllAuthorCompleted(object state) {
            if ((this.selectAllAuthorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectAllAuthorCompleted(this, new selectAllAuthorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectAllAuthorAsync() {
            this.selectAllAuthorAsync(null);
        }
        
        public void selectAllAuthorAsync(object userState) {
            if ((this.onBeginselectAllAuthorDelegate == null)) {
                this.onBeginselectAllAuthorDelegate = new BeginOperationDelegate(this.OnBeginselectAllAuthor);
            }
            if ((this.onEndselectAllAuthorDelegate == null)) {
                this.onEndselectAllAuthorDelegate = new EndOperationDelegate(this.OnEndselectAllAuthor);
            }
            if ((this.onselectAllAuthorCompletedDelegate == null)) {
                this.onselectAllAuthorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectAllAuthorCompleted);
            }
            base.InvokeAsync(this.onBeginselectAllAuthorDelegate, null, this.onEndselectAllAuthorDelegate, this.onselectAllAuthorCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Reader[] selectAllReader() {
            return base.Channel.selectAllReader();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginselectAllReader(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginselectAllReader(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Reader[] EndselectAllReader(System.IAsyncResult result) {
            return base.Channel.EndselectAllReader(result);
        }
        
        private System.IAsyncResult OnBeginselectAllReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginselectAllReader(callback, asyncState);
        }
        
        private object[] OnEndselectAllReader(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Reader[] retVal = this.EndselectAllReader(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectAllReaderCompleted(object state) {
            if ((this.selectAllReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectAllReaderCompleted(this, new selectAllReaderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectAllReaderAsync() {
            this.selectAllReaderAsync(null);
        }
        
        public void selectAllReaderAsync(object userState) {
            if ((this.onBeginselectAllReaderDelegate == null)) {
                this.onBeginselectAllReaderDelegate = new BeginOperationDelegate(this.OnBeginselectAllReader);
            }
            if ((this.onEndselectAllReaderDelegate == null)) {
                this.onEndselectAllReaderDelegate = new EndOperationDelegate(this.OnEndselectAllReader);
            }
            if ((this.onselectAllReaderCompletedDelegate == null)) {
                this.onselectAllReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectAllReaderCompleted);
            }
            base.InvokeAsync(this.onBeginselectAllReaderDelegate, null, this.onEndselectAllReaderDelegate, this.onselectAllReaderCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Journal[] selectAllJournal() {
            return base.Channel.selectAllJournal();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginselectAllJournal(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginselectAllJournal(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Journal[] EndselectAllJournal(System.IAsyncResult result) {
            return base.Channel.EndselectAllJournal(result);
        }
        
        private System.IAsyncResult OnBeginselectAllJournal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginselectAllJournal(callback, asyncState);
        }
        
        private object[] OnEndselectAllJournal(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Journal[] retVal = this.EndselectAllJournal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectAllJournalCompleted(object state) {
            if ((this.selectAllJournalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectAllJournalCompleted(this, new selectAllJournalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectAllJournalAsync() {
            this.selectAllJournalAsync(null);
        }
        
        public void selectAllJournalAsync(object userState) {
            if ((this.onBeginselectAllJournalDelegate == null)) {
                this.onBeginselectAllJournalDelegate = new BeginOperationDelegate(this.OnBeginselectAllJournal);
            }
            if ((this.onEndselectAllJournalDelegate == null)) {
                this.onEndselectAllJournalDelegate = new EndOperationDelegate(this.OnEndselectAllJournal);
            }
            if ((this.onselectAllJournalCompletedDelegate == null)) {
                this.onselectAllJournalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectAllJournalCompleted);
            }
            base.InvokeAsync(this.onBeginselectAllJournalDelegate, null, this.onEndselectAllJournalDelegate, this.onselectAllJournalCompletedDelegate, userState);
        }
        
        public void editBook(int id, int author, int genre, string book_name, bool available) {
            base.Channel.editBook(id, author, genre, book_name, available);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditBook(int id, int author, int genre, string book_name, bool available, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditBook(id, author, genre, book_name, available, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndeditBook(System.IAsyncResult result) {
            base.Channel.EndeditBook(result);
        }
        
        private System.IAsyncResult OnBegineditBook(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            int author = ((int)(inValues[1]));
            int genre = ((int)(inValues[2]));
            string book_name = ((string)(inValues[3]));
            bool available = ((bool)(inValues[4]));
            return this.BegineditBook(id, author, genre, book_name, available, callback, asyncState);
        }
        
        private object[] OnEndeditBook(System.IAsyncResult result) {
            this.EndeditBook(result);
            return null;
        }
        
        private void OneditBookCompleted(object state) {
            if ((this.editBookCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editBookCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editBookAsync(int id, int author, int genre, string book_name, bool available) {
            this.editBookAsync(id, author, genre, book_name, available, null);
        }
        
        public void editBookAsync(int id, int author, int genre, string book_name, bool available, object userState) {
            if ((this.onBegineditBookDelegate == null)) {
                this.onBegineditBookDelegate = new BeginOperationDelegate(this.OnBegineditBook);
            }
            if ((this.onEndeditBookDelegate == null)) {
                this.onEndeditBookDelegate = new EndOperationDelegate(this.OnEndeditBook);
            }
            if ((this.oneditBookCompletedDelegate == null)) {
                this.oneditBookCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditBookCompleted);
            }
            base.InvokeAsync(this.onBegineditBookDelegate, new object[] {
                        id,
                        author,
                        genre,
                        book_name,
                        available}, this.onEndeditBookDelegate, this.oneditBookCompletedDelegate, userState);
        }
        
        public void editGenre(int id, string genre_name, string color) {
            base.Channel.editGenre(id, genre_name, color);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditGenre(int id, string genre_name, string color, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditGenre(id, genre_name, color, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndeditGenre(System.IAsyncResult result) {
            base.Channel.EndeditGenre(result);
        }
        
        private System.IAsyncResult OnBegineditGenre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string genre_name = ((string)(inValues[1]));
            string color = ((string)(inValues[2]));
            return this.BegineditGenre(id, genre_name, color, callback, asyncState);
        }
        
        private object[] OnEndeditGenre(System.IAsyncResult result) {
            this.EndeditGenre(result);
            return null;
        }
        
        private void OneditGenreCompleted(object state) {
            if ((this.editGenreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editGenreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editGenreAsync(int id, string genre_name, string color) {
            this.editGenreAsync(id, genre_name, color, null);
        }
        
        public void editGenreAsync(int id, string genre_name, string color, object userState) {
            if ((this.onBegineditGenreDelegate == null)) {
                this.onBegineditGenreDelegate = new BeginOperationDelegate(this.OnBegineditGenre);
            }
            if ((this.onEndeditGenreDelegate == null)) {
                this.onEndeditGenreDelegate = new EndOperationDelegate(this.OnEndeditGenre);
            }
            if ((this.oneditGenreCompletedDelegate == null)) {
                this.oneditGenreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditGenreCompleted);
            }
            base.InvokeAsync(this.onBegineditGenreDelegate, new object[] {
                        id,
                        genre_name,
                        color}, this.onEndeditGenreDelegate, this.oneditGenreCompletedDelegate, userState);
        }
        
        public void editAuthor(int id, string name, string sname) {
            base.Channel.editAuthor(id, name, sname);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditAuthor(int id, string name, string sname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditAuthor(id, name, sname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndeditAuthor(System.IAsyncResult result) {
            base.Channel.EndeditAuthor(result);
        }
        
        private System.IAsyncResult OnBegineditAuthor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            string sname = ((string)(inValues[2]));
            return this.BegineditAuthor(id, name, sname, callback, asyncState);
        }
        
        private object[] OnEndeditAuthor(System.IAsyncResult result) {
            this.EndeditAuthor(result);
            return null;
        }
        
        private void OneditAuthorCompleted(object state) {
            if ((this.editAuthorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editAuthorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editAuthorAsync(int id, string name, string sname) {
            this.editAuthorAsync(id, name, sname, null);
        }
        
        public void editAuthorAsync(int id, string name, string sname, object userState) {
            if ((this.onBegineditAuthorDelegate == null)) {
                this.onBegineditAuthorDelegate = new BeginOperationDelegate(this.OnBegineditAuthor);
            }
            if ((this.onEndeditAuthorDelegate == null)) {
                this.onEndeditAuthorDelegate = new EndOperationDelegate(this.OnEndeditAuthor);
            }
            if ((this.oneditAuthorCompletedDelegate == null)) {
                this.oneditAuthorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditAuthorCompleted);
            }
            base.InvokeAsync(this.onBegineditAuthorDelegate, new object[] {
                        id,
                        name,
                        sname}, this.onEndeditAuthorDelegate, this.oneditAuthorCompletedDelegate, userState);
        }
        
        public void editReader(int id, string name, string sname) {
            base.Channel.editReader(id, name, sname);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditReader(int id, string name, string sname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditReader(id, name, sname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndeditReader(System.IAsyncResult result) {
            base.Channel.EndeditReader(result);
        }
        
        private System.IAsyncResult OnBegineditReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            string sname = ((string)(inValues[2]));
            return this.BegineditReader(id, name, sname, callback, asyncState);
        }
        
        private object[] OnEndeditReader(System.IAsyncResult result) {
            this.EndeditReader(result);
            return null;
        }
        
        private void OneditReaderCompleted(object state) {
            if ((this.editReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editReaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editReaderAsync(int id, string name, string sname) {
            this.editReaderAsync(id, name, sname, null);
        }
        
        public void editReaderAsync(int id, string name, string sname, object userState) {
            if ((this.onBegineditReaderDelegate == null)) {
                this.onBegineditReaderDelegate = new BeginOperationDelegate(this.OnBegineditReader);
            }
            if ((this.onEndeditReaderDelegate == null)) {
                this.onEndeditReaderDelegate = new EndOperationDelegate(this.OnEndeditReader);
            }
            if ((this.oneditReaderCompletedDelegate == null)) {
                this.oneditReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditReaderCompleted);
            }
            base.InvokeAsync(this.onBegineditReaderDelegate, new object[] {
                        id,
                        name,
                        sname}, this.onEndeditReaderDelegate, this.oneditReaderCompletedDelegate, userState);
        }
        
        public void editJournal(int id, int id_book, int id_reader) {
            base.Channel.editJournal(id, id_book, id_reader);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditJournal(int id, int id_book, int id_reader, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditJournal(id, id_book, id_reader, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndeditJournal(System.IAsyncResult result) {
            base.Channel.EndeditJournal(result);
        }
        
        private System.IAsyncResult OnBegineditJournal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            int id_book = ((int)(inValues[1]));
            int id_reader = ((int)(inValues[2]));
            return this.BegineditJournal(id, id_book, id_reader, callback, asyncState);
        }
        
        private object[] OnEndeditJournal(System.IAsyncResult result) {
            this.EndeditJournal(result);
            return null;
        }
        
        private void OneditJournalCompleted(object state) {
            if ((this.editJournalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editJournalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editJournalAsync(int id, int id_book, int id_reader) {
            this.editJournalAsync(id, id_book, id_reader, null);
        }
        
        public void editJournalAsync(int id, int id_book, int id_reader, object userState) {
            if ((this.onBegineditJournalDelegate == null)) {
                this.onBegineditJournalDelegate = new BeginOperationDelegate(this.OnBegineditJournal);
            }
            if ((this.onEndeditJournalDelegate == null)) {
                this.onEndeditJournalDelegate = new EndOperationDelegate(this.OnEndeditJournal);
            }
            if ((this.oneditJournalCompletedDelegate == null)) {
                this.oneditJournalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditJournalCompleted);
            }
            base.InvokeAsync(this.onBegineditJournalDelegate, new object[] {
                        id,
                        id_book,
                        id_reader}, this.onEndeditJournalDelegate, this.oneditJournalCompletedDelegate, userState);
        }
        
        public void deleteBook(int id) {
            base.Channel.deleteBook(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteBook(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteBook(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EnddeleteBook(System.IAsyncResult result) {
            base.Channel.EnddeleteBook(result);
        }
        
        private System.IAsyncResult OnBegindeleteBook(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegindeleteBook(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteBook(System.IAsyncResult result) {
            this.EnddeleteBook(result);
            return null;
        }
        
        private void OndeleteBookCompleted(object state) {
            if ((this.deleteBookCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteBookCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteBookAsync(int id) {
            this.deleteBookAsync(id, null);
        }
        
        public void deleteBookAsync(int id, object userState) {
            if ((this.onBegindeleteBookDelegate == null)) {
                this.onBegindeleteBookDelegate = new BeginOperationDelegate(this.OnBegindeleteBook);
            }
            if ((this.onEnddeleteBookDelegate == null)) {
                this.onEnddeleteBookDelegate = new EndOperationDelegate(this.OnEnddeleteBook);
            }
            if ((this.ondeleteBookCompletedDelegate == null)) {
                this.ondeleteBookCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteBookCompleted);
            }
            base.InvokeAsync(this.onBegindeleteBookDelegate, new object[] {
                        id}, this.onEnddeleteBookDelegate, this.ondeleteBookCompletedDelegate, userState);
        }
        
        public void deleteGenre(int id) {
            base.Channel.deleteGenre(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteGenre(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteGenre(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EnddeleteGenre(System.IAsyncResult result) {
            base.Channel.EnddeleteGenre(result);
        }
        
        private System.IAsyncResult OnBegindeleteGenre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegindeleteGenre(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteGenre(System.IAsyncResult result) {
            this.EnddeleteGenre(result);
            return null;
        }
        
        private void OndeleteGenreCompleted(object state) {
            if ((this.deleteGenreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteGenreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteGenreAsync(int id) {
            this.deleteGenreAsync(id, null);
        }
        
        public void deleteGenreAsync(int id, object userState) {
            if ((this.onBegindeleteGenreDelegate == null)) {
                this.onBegindeleteGenreDelegate = new BeginOperationDelegate(this.OnBegindeleteGenre);
            }
            if ((this.onEnddeleteGenreDelegate == null)) {
                this.onEnddeleteGenreDelegate = new EndOperationDelegate(this.OnEnddeleteGenre);
            }
            if ((this.ondeleteGenreCompletedDelegate == null)) {
                this.ondeleteGenreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteGenreCompleted);
            }
            base.InvokeAsync(this.onBegindeleteGenreDelegate, new object[] {
                        id}, this.onEnddeleteGenreDelegate, this.ondeleteGenreCompletedDelegate, userState);
        }
        
        public void deleteAuthor(int id) {
            base.Channel.deleteAuthor(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteAuthor(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteAuthor(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EnddeleteAuthor(System.IAsyncResult result) {
            base.Channel.EnddeleteAuthor(result);
        }
        
        private System.IAsyncResult OnBegindeleteAuthor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegindeleteAuthor(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteAuthor(System.IAsyncResult result) {
            this.EnddeleteAuthor(result);
            return null;
        }
        
        private void OndeleteAuthorCompleted(object state) {
            if ((this.deleteAuthorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteAuthorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteAuthorAsync(int id) {
            this.deleteAuthorAsync(id, null);
        }
        
        public void deleteAuthorAsync(int id, object userState) {
            if ((this.onBegindeleteAuthorDelegate == null)) {
                this.onBegindeleteAuthorDelegate = new BeginOperationDelegate(this.OnBegindeleteAuthor);
            }
            if ((this.onEnddeleteAuthorDelegate == null)) {
                this.onEnddeleteAuthorDelegate = new EndOperationDelegate(this.OnEnddeleteAuthor);
            }
            if ((this.ondeleteAuthorCompletedDelegate == null)) {
                this.ondeleteAuthorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteAuthorCompleted);
            }
            base.InvokeAsync(this.onBegindeleteAuthorDelegate, new object[] {
                        id}, this.onEnddeleteAuthorDelegate, this.ondeleteAuthorCompletedDelegate, userState);
        }
        
        public void deleteReader(int id) {
            base.Channel.deleteReader(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteReader(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteReader(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EnddeleteReader(System.IAsyncResult result) {
            base.Channel.EnddeleteReader(result);
        }
        
        private System.IAsyncResult OnBegindeleteReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegindeleteReader(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteReader(System.IAsyncResult result) {
            this.EnddeleteReader(result);
            return null;
        }
        
        private void OndeleteReaderCompleted(object state) {
            if ((this.deleteReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteReaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteReaderAsync(int id) {
            this.deleteReaderAsync(id, null);
        }
        
        public void deleteReaderAsync(int id, object userState) {
            if ((this.onBegindeleteReaderDelegate == null)) {
                this.onBegindeleteReaderDelegate = new BeginOperationDelegate(this.OnBegindeleteReader);
            }
            if ((this.onEnddeleteReaderDelegate == null)) {
                this.onEnddeleteReaderDelegate = new EndOperationDelegate(this.OnEnddeleteReader);
            }
            if ((this.ondeleteReaderCompletedDelegate == null)) {
                this.ondeleteReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteReaderCompleted);
            }
            base.InvokeAsync(this.onBegindeleteReaderDelegate, new object[] {
                        id}, this.onEnddeleteReaderDelegate, this.ondeleteReaderCompletedDelegate, userState);
        }
        
        public void deleteJournal(int id) {
            base.Channel.deleteJournal(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteJournal(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteJournal(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EnddeleteJournal(System.IAsyncResult result) {
            base.Channel.EnddeleteJournal(result);
        }
        
        private System.IAsyncResult OnBegindeleteJournal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegindeleteJournal(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteJournal(System.IAsyncResult result) {
            this.EnddeleteJournal(result);
            return null;
        }
        
        private void OndeleteJournalCompleted(object state) {
            if ((this.deleteJournalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteJournalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteJournalAsync(int id) {
            this.deleteJournalAsync(id, null);
        }
        
        public void deleteJournalAsync(int id, object userState) {
            if ((this.onBegindeleteJournalDelegate == null)) {
                this.onBegindeleteJournalDelegate = new BeginOperationDelegate(this.OnBegindeleteJournal);
            }
            if ((this.onEnddeleteJournalDelegate == null)) {
                this.onEnddeleteJournalDelegate = new EndOperationDelegate(this.OnEnddeleteJournal);
            }
            if ((this.ondeleteJournalCompletedDelegate == null)) {
                this.ondeleteJournalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteJournalCompleted);
            }
            base.InvokeAsync(this.onBegindeleteJournalDelegate, new object[] {
                        id}, this.onEnddeleteJournalDelegate, this.ondeleteJournalCompletedDelegate, userState);
        }
        
        public void addBook(int id_genre, int id_author, string book_name, bool available) {
            base.Channel.addBook(id_genre, id_author, book_name, available);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddBook(int id_genre, int id_author, string book_name, bool available, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddBook(id_genre, id_author, book_name, available, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddBook(System.IAsyncResult result) {
            base.Channel.EndaddBook(result);
        }
        
        private System.IAsyncResult OnBeginaddBook(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_genre = ((int)(inValues[0]));
            int id_author = ((int)(inValues[1]));
            string book_name = ((string)(inValues[2]));
            bool available = ((bool)(inValues[3]));
            return this.BeginaddBook(id_genre, id_author, book_name, available, callback, asyncState);
        }
        
        private object[] OnEndaddBook(System.IAsyncResult result) {
            this.EndaddBook(result);
            return null;
        }
        
        private void OnaddBookCompleted(object state) {
            if ((this.addBookCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addBookCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addBookAsync(int id_genre, int id_author, string book_name, bool available) {
            this.addBookAsync(id_genre, id_author, book_name, available, null);
        }
        
        public void addBookAsync(int id_genre, int id_author, string book_name, bool available, object userState) {
            if ((this.onBeginaddBookDelegate == null)) {
                this.onBeginaddBookDelegate = new BeginOperationDelegate(this.OnBeginaddBook);
            }
            if ((this.onEndaddBookDelegate == null)) {
                this.onEndaddBookDelegate = new EndOperationDelegate(this.OnEndaddBook);
            }
            if ((this.onaddBookCompletedDelegate == null)) {
                this.onaddBookCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddBookCompleted);
            }
            base.InvokeAsync(this.onBeginaddBookDelegate, new object[] {
                        id_genre,
                        id_author,
                        book_name,
                        available}, this.onEndaddBookDelegate, this.onaddBookCompletedDelegate, userState);
        }
        
        public void addGenre(string genre_name, string color) {
            base.Channel.addGenre(genre_name, color);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddGenre(string genre_name, string color, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddGenre(genre_name, color, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddGenre(System.IAsyncResult result) {
            base.Channel.EndaddGenre(result);
        }
        
        private System.IAsyncResult OnBeginaddGenre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string genre_name = ((string)(inValues[0]));
            string color = ((string)(inValues[1]));
            return this.BeginaddGenre(genre_name, color, callback, asyncState);
        }
        
        private object[] OnEndaddGenre(System.IAsyncResult result) {
            this.EndaddGenre(result);
            return null;
        }
        
        private void OnaddGenreCompleted(object state) {
            if ((this.addGenreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addGenreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addGenreAsync(string genre_name, string color) {
            this.addGenreAsync(genre_name, color, null);
        }
        
        public void addGenreAsync(string genre_name, string color, object userState) {
            if ((this.onBeginaddGenreDelegate == null)) {
                this.onBeginaddGenreDelegate = new BeginOperationDelegate(this.OnBeginaddGenre);
            }
            if ((this.onEndaddGenreDelegate == null)) {
                this.onEndaddGenreDelegate = new EndOperationDelegate(this.OnEndaddGenre);
            }
            if ((this.onaddGenreCompletedDelegate == null)) {
                this.onaddGenreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddGenreCompleted);
            }
            base.InvokeAsync(this.onBeginaddGenreDelegate, new object[] {
                        genre_name,
                        color}, this.onEndaddGenreDelegate, this.onaddGenreCompletedDelegate, userState);
        }
        
        public void addReader(string name, string sname) {
            base.Channel.addReader(name, sname);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddReader(string name, string sname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddReader(name, sname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddReader(System.IAsyncResult result) {
            base.Channel.EndaddReader(result);
        }
        
        private System.IAsyncResult OnBeginaddReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string sname = ((string)(inValues[1]));
            return this.BeginaddReader(name, sname, callback, asyncState);
        }
        
        private object[] OnEndaddReader(System.IAsyncResult result) {
            this.EndaddReader(result);
            return null;
        }
        
        private void OnaddReaderCompleted(object state) {
            if ((this.addReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addReaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addReaderAsync(string name, string sname) {
            this.addReaderAsync(name, sname, null);
        }
        
        public void addReaderAsync(string name, string sname, object userState) {
            if ((this.onBeginaddReaderDelegate == null)) {
                this.onBeginaddReaderDelegate = new BeginOperationDelegate(this.OnBeginaddReader);
            }
            if ((this.onEndaddReaderDelegate == null)) {
                this.onEndaddReaderDelegate = new EndOperationDelegate(this.OnEndaddReader);
            }
            if ((this.onaddReaderCompletedDelegate == null)) {
                this.onaddReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddReaderCompleted);
            }
            base.InvokeAsync(this.onBeginaddReaderDelegate, new object[] {
                        name,
                        sname}, this.onEndaddReaderDelegate, this.onaddReaderCompletedDelegate, userState);
        }
        
        public void addAuthor(string name, string sname) {
            base.Channel.addAuthor(name, sname);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddAuthor(string name, string sname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddAuthor(name, sname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddAuthor(System.IAsyncResult result) {
            base.Channel.EndaddAuthor(result);
        }
        
        private System.IAsyncResult OnBeginaddAuthor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string sname = ((string)(inValues[1]));
            return this.BeginaddAuthor(name, sname, callback, asyncState);
        }
        
        private object[] OnEndaddAuthor(System.IAsyncResult result) {
            this.EndaddAuthor(result);
            return null;
        }
        
        private void OnaddAuthorCompleted(object state) {
            if ((this.addAuthorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addAuthorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addAuthorAsync(string name, string sname) {
            this.addAuthorAsync(name, sname, null);
        }
        
        public void addAuthorAsync(string name, string sname, object userState) {
            if ((this.onBeginaddAuthorDelegate == null)) {
                this.onBeginaddAuthorDelegate = new BeginOperationDelegate(this.OnBeginaddAuthor);
            }
            if ((this.onEndaddAuthorDelegate == null)) {
                this.onEndaddAuthorDelegate = new EndOperationDelegate(this.OnEndaddAuthor);
            }
            if ((this.onaddAuthorCompletedDelegate == null)) {
                this.onaddAuthorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddAuthorCompleted);
            }
            base.InvokeAsync(this.onBeginaddAuthorDelegate, new object[] {
                        name,
                        sname}, this.onEndaddAuthorDelegate, this.onaddAuthorCompletedDelegate, userState);
        }
        
        public void addJournal(int id_book, int id_reader) {
            base.Channel.addJournal(id_book, id_reader);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddJournal(int id_book, int id_reader, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddJournal(id_book, id_reader, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddJournal(System.IAsyncResult result) {
            base.Channel.EndaddJournal(result);
        }
        
        private System.IAsyncResult OnBeginaddJournal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_book = ((int)(inValues[0]));
            int id_reader = ((int)(inValues[1]));
            return this.BeginaddJournal(id_book, id_reader, callback, asyncState);
        }
        
        private object[] OnEndaddJournal(System.IAsyncResult result) {
            this.EndaddJournal(result);
            return null;
        }
        
        private void OnaddJournalCompleted(object state) {
            if ((this.addJournalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addJournalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addJournalAsync(int id_book, int id_reader) {
            this.addJournalAsync(id_book, id_reader, null);
        }
        
        public void addJournalAsync(int id_book, int id_reader, object userState) {
            if ((this.onBeginaddJournalDelegate == null)) {
                this.onBeginaddJournalDelegate = new BeginOperationDelegate(this.OnBeginaddJournal);
            }
            if ((this.onEndaddJournalDelegate == null)) {
                this.onEndaddJournalDelegate = new EndOperationDelegate(this.OnEndaddJournal);
            }
            if ((this.onaddJournalCompletedDelegate == null)) {
                this.onaddJournalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddJournalCompleted);
            }
            base.InvokeAsync(this.onBeginaddJournalDelegate, new object[] {
                        id_book,
                        id_reader}, this.onEndaddJournalDelegate, this.onaddJournalCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Book[] searchBook(string name) {
            return base.Channel.searchBook(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsearchBook(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsearchBook(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Book[] EndsearchBook(System.IAsyncResult result) {
            return base.Channel.EndsearchBook(result);
        }
        
        private System.IAsyncResult OnBeginsearchBook(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return this.BeginsearchBook(name, callback, asyncState);
        }
        
        private object[] OnEndsearchBook(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Book[] retVal = this.EndsearchBook(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsearchBookCompleted(object state) {
            if ((this.searchBookCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.searchBookCompleted(this, new searchBookCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void searchBookAsync(string name) {
            this.searchBookAsync(name, null);
        }
        
        public void searchBookAsync(string name, object userState) {
            if ((this.onBeginsearchBookDelegate == null)) {
                this.onBeginsearchBookDelegate = new BeginOperationDelegate(this.OnBeginsearchBook);
            }
            if ((this.onEndsearchBookDelegate == null)) {
                this.onEndsearchBookDelegate = new EndOperationDelegate(this.OnEndsearchBook);
            }
            if ((this.onsearchBookCompletedDelegate == null)) {
                this.onsearchBookCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsearchBookCompleted);
            }
            base.InvokeAsync(this.onBeginsearchBookDelegate, new object[] {
                        name}, this.onEndsearchBookDelegate, this.onsearchBookCompletedDelegate, userState);
        }
        
        public void writeError(string error) {
            base.Channel.writeError(error);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginwriteError(string error, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginwriteError(error, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndwriteError(System.IAsyncResult result) {
            base.Channel.EndwriteError(result);
        }
        
        private System.IAsyncResult OnBeginwriteError(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string error = ((string)(inValues[0]));
            return this.BeginwriteError(error, callback, asyncState);
        }
        
        private object[] OnEndwriteError(System.IAsyncResult result) {
            this.EndwriteError(result);
            return null;
        }
        
        private void OnwriteErrorCompleted(object state) {
            if ((this.writeErrorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.writeErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void writeErrorAsync(string error) {
            this.writeErrorAsync(error, null);
        }
        
        public void writeErrorAsync(string error, object userState) {
            if ((this.onBeginwriteErrorDelegate == null)) {
                this.onBeginwriteErrorDelegate = new BeginOperationDelegate(this.OnBeginwriteError);
            }
            if ((this.onEndwriteErrorDelegate == null)) {
                this.onEndwriteErrorDelegate = new EndOperationDelegate(this.OnEndwriteError);
            }
            if ((this.onwriteErrorCompletedDelegate == null)) {
                this.onwriteErrorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnwriteErrorCompleted);
            }
            base.InvokeAsync(this.onBeginwriteErrorDelegate, new object[] {
                        error}, this.onEndwriteErrorDelegate, this.onwriteErrorCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Book[] filterGenre(int id) {
            return base.Channel.filterGenre(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfilterGenre(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfilterGenre(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Book[] EndfilterGenre(System.IAsyncResult result) {
            return base.Channel.EndfilterGenre(result);
        }
        
        private System.IAsyncResult OnBeginfilterGenre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginfilterGenre(id, callback, asyncState);
        }
        
        private object[] OnEndfilterGenre(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Book[] retVal = this.EndfilterGenre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfilterGenreCompleted(object state) {
            if ((this.filterGenreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.filterGenreCompleted(this, new filterGenreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void filterGenreAsync(int id) {
            this.filterGenreAsync(id, null);
        }
        
        public void filterGenreAsync(int id, object userState) {
            if ((this.onBeginfilterGenreDelegate == null)) {
                this.onBeginfilterGenreDelegate = new BeginOperationDelegate(this.OnBeginfilterGenre);
            }
            if ((this.onEndfilterGenreDelegate == null)) {
                this.onEndfilterGenreDelegate = new EndOperationDelegate(this.OnEndfilterGenre);
            }
            if ((this.onfilterGenreCompletedDelegate == null)) {
                this.onfilterGenreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfilterGenreCompleted);
            }
            base.InvokeAsync(this.onBeginfilterGenreDelegate, new object[] {
                        id}, this.onEndfilterGenreDelegate, this.onfilterGenreCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Book[] filterAuthor(int id) {
            return base.Channel.filterAuthor(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfilterAuthor(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfilterAuthor(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Book[] EndfilterAuthor(System.IAsyncResult result) {
            return base.Channel.EndfilterAuthor(result);
        }
        
        private System.IAsyncResult OnBeginfilterAuthor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginfilterAuthor(id, callback, asyncState);
        }
        
        private object[] OnEndfilterAuthor(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Book[] retVal = this.EndfilterAuthor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfilterAuthorCompleted(object state) {
            if ((this.filterAuthorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.filterAuthorCompleted(this, new filterAuthorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void filterAuthorAsync(int id) {
            this.filterAuthorAsync(id, null);
        }
        
        public void filterAuthorAsync(int id, object userState) {
            if ((this.onBeginfilterAuthorDelegate == null)) {
                this.onBeginfilterAuthorDelegate = new BeginOperationDelegate(this.OnBeginfilterAuthor);
            }
            if ((this.onEndfilterAuthorDelegate == null)) {
                this.onEndfilterAuthorDelegate = new EndOperationDelegate(this.OnEndfilterAuthor);
            }
            if ((this.onfilterAuthorCompletedDelegate == null)) {
                this.onfilterAuthorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfilterAuthorCompleted);
            }
            base.InvokeAsync(this.onBeginfilterAuthorDelegate, new object[] {
                        id}, this.onEndfilterAuthorDelegate, this.onfilterAuthorCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Book[] filterAvailable(bool available) {
            return base.Channel.filterAvailable(available);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfilterAvailable(bool available, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfilterAvailable(available, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Book[] EndfilterAvailable(System.IAsyncResult result) {
            return base.Channel.EndfilterAvailable(result);
        }
        
        private System.IAsyncResult OnBeginfilterAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool available = ((bool)(inValues[0]));
            return this.BeginfilterAvailable(available, callback, asyncState);
        }
        
        private object[] OnEndfilterAvailable(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Book[] retVal = this.EndfilterAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfilterAvailableCompleted(object state) {
            if ((this.filterAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.filterAvailableCompleted(this, new filterAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void filterAvailableAsync(bool available) {
            this.filterAvailableAsync(available, null);
        }
        
        public void filterAvailableAsync(bool available, object userState) {
            if ((this.onBeginfilterAvailableDelegate == null)) {
                this.onBeginfilterAvailableDelegate = new BeginOperationDelegate(this.OnBeginfilterAvailable);
            }
            if ((this.onEndfilterAvailableDelegate == null)) {
                this.onEndfilterAvailableDelegate = new EndOperationDelegate(this.OnEndfilterAvailable);
            }
            if ((this.onfilterAvailableCompletedDelegate == null)) {
                this.onfilterAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfilterAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginfilterAvailableDelegate, new object[] {
                        available}, this.onEndfilterAvailableDelegate, this.onfilterAvailableCompletedDelegate, userState);
        }
        
        public int saveUser(string name, string surname, string login, string password) {
            return base.Channel.saveUser(name, surname, login, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsaveUser(string name, string surname, string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsaveUser(name, surname, login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndsaveUser(System.IAsyncResult result) {
            return base.Channel.EndsaveUser(result);
        }
        
        private System.IAsyncResult OnBeginsaveUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string surname = ((string)(inValues[1]));
            string login = ((string)(inValues[2]));
            string password = ((string)(inValues[3]));
            return this.BeginsaveUser(name, surname, login, password, callback, asyncState);
        }
        
        private object[] OnEndsaveUser(System.IAsyncResult result) {
            int retVal = this.EndsaveUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsaveUserCompleted(object state) {
            if ((this.saveUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.saveUserCompleted(this, new saveUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void saveUserAsync(string name, string surname, string login, string password) {
            this.saveUserAsync(name, surname, login, password, null);
        }
        
        public void saveUserAsync(string name, string surname, string login, string password, object userState) {
            if ((this.onBeginsaveUserDelegate == null)) {
                this.onBeginsaveUserDelegate = new BeginOperationDelegate(this.OnBeginsaveUser);
            }
            if ((this.onEndsaveUserDelegate == null)) {
                this.onEndsaveUserDelegate = new EndOperationDelegate(this.OnEndsaveUser);
            }
            if ((this.onsaveUserCompletedDelegate == null)) {
                this.onsaveUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsaveUserCompleted);
            }
            base.InvokeAsync(this.onBeginsaveUserDelegate, new object[] {
                        name,
                        surname,
                        login,
                        password}, this.onEndsaveUserDelegate, this.onsaveUserCompletedDelegate, userState);
        }
        
        public int logIn(string login1, string password) {
            return base.Channel.logIn(login1, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlogIn(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlogIn(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndlogIn(System.IAsyncResult result) {
            return base.Channel.EndlogIn(result);
        }
        
        private System.IAsyncResult OnBeginlogIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginlogIn(login, password, callback, asyncState);
        }
        
        private object[] OnEndlogIn(System.IAsyncResult result) {
            int retVal = this.EndlogIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlogInCompleted(object state) {
            if ((this.logInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.logInCompleted(this, new logInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void logInAsync(string login, string password) {
            this.logInAsync(login, password, null);
        }
        
        public void logInAsync(string login, string password, object userState) {
            if ((this.onBeginlogInDelegate == null)) {
                this.onBeginlogInDelegate = new BeginOperationDelegate(this.OnBeginlogIn);
            }
            if ((this.onEndlogInDelegate == null)) {
                this.onEndlogInDelegate = new EndOperationDelegate(this.OnEndlogIn);
            }
            if ((this.onlogInCompletedDelegate == null)) {
                this.onlogInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlogInCompleted);
            }
            base.InvokeAsync(this.onBeginlogInDelegate, new object[] {
                        login,
                        password}, this.onEndlogInDelegate, this.onlogInCompletedDelegate, userState);
        }
        
        public int Connect(int id) {
            return base.Channel.Connect(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnect(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnect(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndConnect(System.IAsyncResult result) {
            return base.Channel.EndConnect(result);
        }
        
        private System.IAsyncResult OnBeginConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginConnect(id, callback, asyncState);
        }
        
        private object[] OnEndConnect(System.IAsyncResult result) {
            int retVal = this.EndConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConnectCompleted(object state) {
            if ((this.ConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectAsync(int id) {
            this.ConnectAsync(id, null);
        }
        
        public void ConnectAsync(int id, object userState) {
            if ((this.onBeginConnectDelegate == null)) {
                this.onBeginConnectDelegate = new BeginOperationDelegate(this.OnBeginConnect);
            }
            if ((this.onEndConnectDelegate == null)) {
                this.onEndConnectDelegate = new EndOperationDelegate(this.OnEndConnect);
            }
            if ((this.onConnectCompletedDelegate == null)) {
                this.onConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectCompleted);
            }
            base.InvokeAsync(this.onBeginConnectDelegate, new object[] {
                        id}, this.onEndConnectDelegate, this.onConnectCompletedDelegate, userState);
        }
        
        public void Disconnect(int id) {
            base.Channel.Disconnect(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginDisconnect(id, callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync(int id) {
            this.DisconnectAsync(id, null);
        }
        
        public void DisconnectAsync(int id, object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, new object[] {
                        id}, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
        
        public void sendMsg(string message, int id) {
            base.Channel.sendMsg(message, id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsendMsg(string message, int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendMsg(message, id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndsendMsg(System.IAsyncResult result) {
            base.Channel.EndsendMsg(result);
        }
        
        private System.IAsyncResult OnBeginsendMsg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string message = ((string)(inValues[0]));
            int id = ((int)(inValues[1]));
            return this.BeginsendMsg(message, id, callback, asyncState);
        }
        
        private object[] OnEndsendMsg(System.IAsyncResult result) {
            this.EndsendMsg(result);
            return null;
        }
        
        private void OnsendMsgCompleted(object state) {
            if ((this.sendMsgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendMsgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendMsgAsync(string message, int id) {
            this.sendMsgAsync(message, id, null);
        }
        
        public void sendMsgAsync(string message, int id, object userState) {
            if ((this.onBeginsendMsgDelegate == null)) {
                this.onBeginsendMsgDelegate = new BeginOperationDelegate(this.OnBeginsendMsg);
            }
            if ((this.onEndsendMsgDelegate == null)) {
                this.onEndsendMsgDelegate = new EndOperationDelegate(this.OnEndsendMsg);
            }
            if ((this.onsendMsgCompletedDelegate == null)) {
                this.onsendMsgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendMsgCompleted);
            }
            base.InvokeAsync(this.onBeginsendMsgDelegate, new object[] {
                        message,
                        id}, this.onEndsendMsgDelegate, this.onsendMsgCompletedDelegate, userState);
        }
        
        public string sendMessage(string message, int id) {
            return base.Channel.sendMessage(message, id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsendMessage(string message, int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendMessage(message, id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndsendMessage(System.IAsyncResult result) {
            return base.Channel.EndsendMessage(result);
        }
        
        private System.IAsyncResult OnBeginsendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string message = ((string)(inValues[0]));
            int id = ((int)(inValues[1]));
            return this.BeginsendMessage(message, id, callback, asyncState);
        }
        
        private object[] OnEndsendMessage(System.IAsyncResult result) {
            string retVal = this.EndsendMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsendMessageCompleted(object state) {
            if ((this.sendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendMessageCompleted(this, new sendMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendMessageAsync(string message, int id) {
            this.sendMessageAsync(message, id, null);
        }
        
        public void sendMessageAsync(string message, int id, object userState) {
            if ((this.onBeginsendMessageDelegate == null)) {
                this.onBeginsendMessageDelegate = new BeginOperationDelegate(this.OnBeginsendMessage);
            }
            if ((this.onEndsendMessageDelegate == null)) {
                this.onEndsendMessageDelegate = new EndOperationDelegate(this.OnEndsendMessage);
            }
            if ((this.onsendMessageCompletedDelegate == null)) {
                this.onsendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginsendMessageDelegate, new object[] {
                        message,
                        id}, this.onEndsendMessageDelegate, this.onsendMessageCompletedDelegate, userState);
        }
        
        public string[] checkForMessage(int count, int current) {
            return base.Channel.checkForMessage(count, current);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegincheckForMessage(int count, int current, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegincheckForMessage(count, current, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndcheckForMessage(System.IAsyncResult result) {
            return base.Channel.EndcheckForMessage(result);
        }
        
        private System.IAsyncResult OnBegincheckForMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int count = ((int)(inValues[0]));
            int current = ((int)(inValues[1]));
            return this.BegincheckForMessage(count, current, callback, asyncState);
        }
        
        private object[] OnEndcheckForMessage(System.IAsyncResult result) {
            string[] retVal = this.EndcheckForMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OncheckForMessageCompleted(object state) {
            if ((this.checkForMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.checkForMessageCompleted(this, new checkForMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void checkForMessageAsync(int count, int current) {
            this.checkForMessageAsync(count, current, null);
        }
        
        public void checkForMessageAsync(int count, int current, object userState) {
            if ((this.onBegincheckForMessageDelegate == null)) {
                this.onBegincheckForMessageDelegate = new BeginOperationDelegate(this.OnBegincheckForMessage);
            }
            if ((this.onEndcheckForMessageDelegate == null)) {
                this.onEndcheckForMessageDelegate = new EndOperationDelegate(this.OnEndcheckForMessage);
            }
            if ((this.oncheckForMessageCompletedDelegate == null)) {
                this.oncheckForMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncheckForMessageCompleted);
            }
            base.InvokeAsync(this.onBegincheckForMessageDelegate, new object[] {
                        count,
                        current}, this.onEndcheckForMessageDelegate, this.oncheckForMessageCompletedDelegate, userState);
        }
        
        public int currentMsg() {
            return base.Channel.currentMsg();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegincurrentMsg(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegincurrentMsg(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndcurrentMsg(System.IAsyncResult result) {
            return base.Channel.EndcurrentMsg(result);
        }
        
        private System.IAsyncResult OnBegincurrentMsg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegincurrentMsg(callback, asyncState);
        }
        
        private object[] OnEndcurrentMsg(System.IAsyncResult result) {
            int retVal = this.EndcurrentMsg(result);
            return new object[] {
                    retVal};
        }
        
        private void OncurrentMsgCompleted(object state) {
            if ((this.currentMsgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.currentMsgCompleted(this, new currentMsgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void currentMsgAsync() {
            this.currentMsgAsync(null);
        }
        
        public void currentMsgAsync(object userState) {
            if ((this.onBegincurrentMsgDelegate == null)) {
                this.onBegincurrentMsgDelegate = new BeginOperationDelegate(this.OnBegincurrentMsg);
            }
            if ((this.onEndcurrentMsgDelegate == null)) {
                this.onEndcurrentMsgDelegate = new EndOperationDelegate(this.OnEndcurrentMsg);
            }
            if ((this.oncurrentMsgCompletedDelegate == null)) {
                this.oncurrentMsgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncurrentMsgCompleted);
            }
            base.InvokeAsync(this.onBegincurrentMsgDelegate, null, this.onEndcurrentMsgDelegate, this.oncurrentMsgCompletedDelegate, userState);
        }
        
        public EntityDB.ServiceReference1.T_Report[] selectReport() {
            return base.Channel.selectReport();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginselectReport(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginselectReport(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EntityDB.ServiceReference1.T_Report[] EndselectReport(System.IAsyncResult result) {
            return base.Channel.EndselectReport(result);
        }
        
        private System.IAsyncResult OnBeginselectReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginselectReport(callback, asyncState);
        }
        
        private object[] OnEndselectReport(System.IAsyncResult result) {
            EntityDB.ServiceReference1.T_Report[] retVal = this.EndselectReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectReportCompleted(object state) {
            if ((this.selectReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectReportCompleted(this, new selectReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectReportAsync() {
            this.selectReportAsync(null);
        }
        
        public void selectReportAsync(object userState) {
            if ((this.onBeginselectReportDelegate == null)) {
                this.onBeginselectReportDelegate = new BeginOperationDelegate(this.OnBeginselectReport);
            }
            if ((this.onEndselectReportDelegate == null)) {
                this.onEndselectReportDelegate = new EndOperationDelegate(this.OnEndselectReport);
            }
            if ((this.onselectReportCompletedDelegate == null)) {
                this.onselectReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectReportCompleted);
            }
            base.InvokeAsync(this.onBeginselectReportDelegate, null, this.onEndselectReportDelegate, this.onselectReportCompletedDelegate, userState);
        }
    }
}
